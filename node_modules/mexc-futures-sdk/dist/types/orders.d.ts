export interface OrderHistoryParams {
    category: number;
    page_num: number;
    page_size: number;
    states: number;
    symbol: string;
}
export interface Order {
    id: string;
    symbol: string;
    side: number;
    type: string;
    vol: number;
    price: string;
    leverage: number;
    status: string;
    createTime: number;
    updateTime: number;
}
export interface OrderHistoryResponse {
    success: boolean;
    code: number;
    data: {
        orders: Order[];
        total: number;
    };
}
export interface OrderDealsParams {
    symbol: string;
    start_time?: number;
    end_time?: number;
    page_num: number;
    page_size: number;
}
export interface OrderDeal {
    id: number;
    symbol: string;
    side: number;
    vol: string;
    price: string;
    fee: string;
    feeCurrency: string;
    profit: string;
    isTaker: boolean;
    category: number;
    orderId: number;
    timestamp: number;
}
export interface OrderDealsResponse {
    success: boolean;
    code: number;
    data: OrderDeal[];
}
export interface CancelOrderResult {
    orderId: number;
    errorCode: number;
    errorMsg: string;
}
export interface CancelOrderResponse {
    success: boolean;
    code: number;
    data: CancelOrderResult[];
}
export interface CancelOrderByExternalIdRequest {
    symbol: string;
    externalOid: string;
}
export interface CancelOrderByExternalIdResponse {
    success: boolean;
    code: number;
    data?: {
        symbol: string;
        externalOid: string;
    };
}
export interface CancelAllOrdersRequest {
    symbol?: string;
}
export interface CancelAllOrdersResponse {
    success: boolean;
    code: number;
    data?: any;
}
export interface SubmitOrderRequest {
    symbol: string;
    price: number;
    vol: number;
    leverage?: number;
    side: 1 | 2 | 3 | 4;
    type: 1 | 2 | 3 | 4 | 5 | 6;
    openType: 1 | 2;
    positionId?: number;
    externalOid?: string;
    stopLossPrice?: number;
    takeProfitPrice?: number;
    positionMode?: 1 | 2;
    reduceOnly?: boolean;
}
export interface SubmitOrderResponse {
    success: boolean;
    code: number;
    message?: string;
    data?: number;
}
export interface GetOrderResponse {
    success: boolean;
    code: number;
    data: {
        orderId: string;
        symbol: string;
        positionId: number;
        price: number;
        vol: number;
        leverage: number;
        side: number;
        category: number;
        orderType: number;
        dealAvgPrice: number;
        dealVol: number;
        orderMargin: number;
        takerFee: number;
        makerFee: number;
        profit: number;
        feeCurrency: string;
        openType: number;
        state: number;
        externalOid: string;
        errorCode: number;
        usedMargin: number;
        createTime: number;
        updateTime: number;
    };
}
//# sourceMappingURL=orders.d.ts.map