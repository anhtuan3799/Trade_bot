export interface RiskLimit {
    symbol: string;
    level: number;
    maxLeverage: number;
    riskLimit: number;
    maintMarginRate: number;
}
export interface FeeRate {
    symbol: string;
    takerFeeRate: number;
    makerFeeRate: number;
}
export interface AccountResponse<T> {
    success: boolean;
    code: number;
    data: T;
}
export interface AccountAsset {
    currency: string;
    positionMargin: number;
    availableBalance: number;
    cashBalance: number;
    frozenBalance: number;
    equity: number;
    unrealized: number;
    bonus: number;
}
export interface AccountAssetResponse {
    success: boolean;
    code: number;
    data: AccountAsset;
}
export interface Position {
    positionId: number;
    symbol: string;
    positionType: 1 | 2;
    openType: 1 | 2;
    state: 1 | 2 | 3;
    holdVol: number;
    frozenVol: number;
    closeVol: number;
    holdAvgPrice: number;
    openAvgPrice: number;
    closeAvgPrice: number;
    liquidatePrice: number;
    oim: number;
    adlLevel?: number;
    im: number;
    holdFee: number;
    realised: number;
    leverage: number;
    createTime: number;
    updateTime: number;
    autoAddIm?: boolean;
}
export interface OpenPositionsResponse {
    success: boolean;
    code: number;
    data: Position[];
}
export interface PositionHistoryParams {
    symbol?: string;
    type?: 1 | 2;
    page_num: number;
    page_size: number;
}
export interface PositionHistoryResponse {
    success: boolean;
    code: number;
    message: string;
    data: Position[];
}
//# sourceMappingURL=account.d.ts.map